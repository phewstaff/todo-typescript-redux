[{"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/index.tsx":"1","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/App.tsx":"2","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/store.ts":"3","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/components/AddToList.tsx":"4","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/reducers/combineReducers.ts":"5","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/components/Todos.tsx":"6","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/reducers/todoReducer.ts":"7","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/hooks/useTypedSelector.ts":"8","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/index.ts":"9","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/actions/actionTypes.ts":"10","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/action-creators/todoActionCreators.ts":"11"},{"size":399,"mtime":1674572643546,"results":"12","hashOfConfig":"13"},{"size":241,"mtime":1673974855148,"results":"14","hashOfConfig":"13"},{"size":211,"mtime":1673884045251,"results":"15","hashOfConfig":"13"},{"size":1354,"mtime":1674042033618,"results":"16","hashOfConfig":"13"},{"size":220,"mtime":1673856500877,"results":"17","hashOfConfig":"13"},{"size":1134,"mtime":1673974952505,"results":"18","hashOfConfig":"13"},{"size":597,"mtime":1673974327826,"results":"19","hashOfConfig":"13"},{"size":223,"mtime":1673884045260,"results":"20","hashOfConfig":"13"},{"size":72,"mtime":1673884214101,"results":"21","hashOfConfig":"13"},{"size":84,"mtime":1673541195385,"results":"22","hashOfConfig":"13"},{"size":556,"mtime":1673973786595,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v0cwqz",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/index.tsx",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/App.tsx",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/store.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/components/AddToList.tsx",["58"],[],"import React, { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { bindActionCreators } from \"redux\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators } from \"../redux\";\n\nconst AddToList: React.FC = () => {\n  const dispatch = useDispatch();\n  const { addTodo } = bindActionCreators(actionCreators, dispatch);\n  const [userInput, setUserInput] = useState(\"\");\n  const [id, setId] = useState(v4());\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    if (e.currentTarget.value.trim().length === 0) {\n      {\n        setEmpty(true);\n      }\n    } else {\n      setEmpty(false);\n    }\n    setUserInput(e.currentTarget.value);\n  };\n  const handleClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    setId(v4());\n    e.preventDefault();\n    addTodo(userInput, id);\n    setUserInput(\"\");\n  };\n  const [empty, setEmpty] = useState(true);\n  return (\n    <>\n      <form className=\"todo-form\">\n        <input\n          onChange={handleChange}\n          value={userInput}\n          className=\"todo-input\"\n          placeholder=\"type what to do\"\n        ></input>\n        <button\n          disabled={empty}\n          onClick={handleClick}\n          className=\"todo-button edit\"\n        >\n          add task\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AddToList;\n","/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/reducers/combineReducers.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/components/Todos.tsx",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/reducers/todoReducer.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/hooks/useTypedSelector.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/index.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/actions/actionTypes.ts",[],[],"/Users/magomed/Desktop/the way of ninja/Unicode/reactProjects/todo-typescript-redux/src/redux/action-creators/todoActionCreators.ts",[],[],{"ruleId":"59","severity":1,"message":"60","line":14,"column":7,"nodeType":"61","messageId":"62","endLine":16,"endColumn":8},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock"]